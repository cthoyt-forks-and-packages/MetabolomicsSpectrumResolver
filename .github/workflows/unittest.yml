name: unittest

on: 
  - push
  - pull_request

jobs:
  unit-test:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

### We probably should switch to using the Docker version, its a TODO
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
        conda config --set always_yes yes --set changeps1 no
        conda update -q conda
        conda create -n usi -c rdkit rdkit=2019.09.3.0
        bash -c "source activate usi"
        conda install -n usi -c anaconda flask
        conda install -n usi -c anaconda gunicorn
        conda install -n usi -c anaconda requests
        conda install -n usi -c bioconda spectrum_utils
        conda install -n usi -c conda-forge xmltodict
        conda install -n usi -c conda-forge qrcode
        conda install -n usi -c conda-forge requests-cache
        conda install -n usi -c conda-forge nose2
        conda install -n usi -c anaconda scipy
        echo "source activate usi" > ~/.bashrc
    - name: Lint with flake8
      run: |
        export PATH="$HOME/miniconda/bin:$PATH"
        bash -c "source activate usi"
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PATH="$HOME/miniconda/bin:$PATH"
        source ~/.bashrc
        pip install .
        cd test	&& nose2 -v
